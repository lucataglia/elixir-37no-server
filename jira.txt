Implement where a table ends because everybody quit or because noone wants to play again.
When a table end the TableManager {:stop, {:shutdown, {:table_manager_shutdown_game_ended, uuid}}}
so the GameManager that is monitoring him can clear the uuid from the active tables. ✅

Check that the players that left the table aren't still recieve the messages from the TableManager.

The ref_i_am_thinking_deeply could become a map %{ref: .., count: ...} and if count is equal to 3
we can trigger an automatic choice so the game can continue. We can also think about a strategy that
reduce the time of the intervall if the timer expired X times.

Move all the files created by Persistence Actors under a db folder so I can gitignore
only the db folder.

Init stats when a new account is created
✅

Put the timestamp into the log 
✅ (add Utils.Log module)

Fix the marconobile bug when it was dealer 
✅ (add dealer_with_choice behavior)

Add TLS
✅

When the better stash the check is done in the check about the turn_first_card PlayerActor side. That's a problem,
it would be better if all those checks are done on the TableManager side. The problem is that adding TLS there are
some latency that slow down the comunications and some corner cases rose. Stash must be a message sent to the 
TableManager and must be a sync messaege (and probably also the @choice message)

For the TableManager the cast reset the timer while the call doesn't ... fix that